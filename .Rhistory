result1 <- tmle(Y=time, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
library(tmle)
result1 <- tmle(Y=time, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result1)
newdat$time
summary(result1)
result1 <- tmle(Y=time>=5, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result1)
result1 <- tmle(Y=time>=6, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result1)
result2 <- tmle(Y=time>=5, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result2)
result1 <- tmle(Y=time>=6, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result1)
result3 <- tmle(Y=time, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result3)
covs
covs = colnames(newdat)[3:22]
covs = covs[covs != "dnumchild"]
covs = covs[covs != "time"]
covs = covs[covs != "status"]
covs = covs[covs != "Treat"]
covs
result2 <- tmle(Y=time>=5, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result2)
result3 <- tmle(Y=time, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result3)
result1 <- tmle(Y=time>=6, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result1)
covs
covs = covs[covs != "dracehisp"]
result2 <- tmle(Y=time>=5, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result2)
covs
covs = covs[covs != "X2intvrage"]
result3 <- tmle(Y=time, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result3)
covs = covs[covs != "X2intvrage"]
result3 <- tmle(Y=time, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result3)
cosv
covs
covs = covs[covs != "X2intvrage"]
covs = covs[covs != "disescn1"]
covs = covs[covs != "disescn2"]
covs = covs[covs != "disescn3"]
result3 <- tmle(Y=time, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result3)
result2 <- tmle(Y=time>=5, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result2)
library(SuperLearner)
result2 <- tmle(Y=time>=5, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result2)
?tmle
result3 <- tmle(Y=time, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result3)
covs = colnames(newdat)[3:22]
covs = covs[covs != "dnumchild"]
covs = covs[covs != "time"]
covs = covs[covs != "status"]
covs = covs[covs != "Treat"]
result3 <- tmle(Y=time, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result3)
cox_result <- read.csv( "cox_model_result.csv")
dat_cox <- cox_result[cox_result$Pr...z.. <=0.05,]
dat_cox <- dat_cox[!is.na(dat_cox$z),]
dat_cox
result2 <- tmle(Y=time>=5, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result2)
result2 <- tmle(Y=time>=6, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result2)
result2 <- tmle(Y=time>=4, A=newdat$Treat,W=newdat[, covs], Delta=newdat$status)
summary(result2)
0.005 - 1.96* 0.005
qnorm(-0.005)
qnorm(0.005/0.004)
pnorm(0.005/0.004, 0, 0,004)
pnorm(0.005/0.004, 0, 0.004)
pnorm(0.005/0.004, 0, 0.004)
0.009 - 0.005*1.95
0.009 + 0.005*1.95
0.008 - 0.005*1.95
0.008 + 0.005*1.95
pnorm(0.008/0.005)
2*(1 - pnorm(0.008/0.005))
2*(1 - pnorm(0.009/0.005))
-0.164 - 1.96*0.005
-0.164 + 1.96*0.005
-0.021 - 1.96*0.010
-0.021 + 1.96*0.010
2*pnorm(-0.164/0.005)
2*pnorm(-0.021/0.01)
document()
library(devtools)
document()
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main")
library(MultiObjMatch)
library(MatchIt)
data("lalonde")
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal1 <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
lalonde
library(Matching)
data("lalonde")
lalonde
lalonde
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
lalonde
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
lalonde
library(MatchIt)
data("lalonde")
lalonde
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
lalonde
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
library(dplyr)
library(optmatch)
library(rcbalance)
library(matchMulti)
library(RCurl)
library(MultiObjMatch)
library(cobalt)
data("lalonde")
lalonde
library(MultiObjMatch)
library(dplyr)
library(optmatch)
library(rcbalance)
library(matchMulti)
library(RCurl)
library(MultiObjMatch)
library(cobalt)
data("lalonde")
lalonde
library(cobalt)
data("lalonde")
lalonde
data("lalonde", package = "cobalt")
lalonde
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
matchResult$rhoList
generate_balance_table(matchingResult)
generate_balance_table(matchResult)
generate_balance_table(matchResult)
compare_matching(mathResult, covList=c("age", "educ", "race", "married", "nodegree"))
compare_matching(mathResult, covList=c("age", "educ", "race", "married", "nodegree"))
compare_matching(matchResult, covList=c("age", "educ", "race", "married", "nodegree"))
generate_tv_graph(matchResult)
generate_pairdistance_graph(matchResult)
generate_pairdistance_balance_graph(matchResult)
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=0, rho.max.f = 10)
compare_matching(matchResult, covList=c("age", "educ", "race", "married", "nodegree"))
generate_tv_graph(matchResult)
generate_pairdistance_graph(matchResult)
generate_pairdistance_balance_graph(matchResult)
psCols <- c("age", "educ", "married", "nodegree")
## Specify the name of treatment variable
treatVal1 <- "treat"
## Specify the name of response variable
responseVal1 <- "re78"
## Specify the list of variable names used for calculating the pairwise distance
pairDistVal1 <- c("age","married","educ", "nodegree")
## Specify the column for exact matching
exactVal1 <- c("educ")
## Specify the column for measuring balance in algorithm
myBalVal1 <- c("race")
head(lalonde)
## Specify the values to try for rho1
r1s <- c(0.01, 0.02, 0.03, 0.04, 0.1, 0.3, 0.5, 0.7, 0.9)
## Specify the values to try for rho2
r2s <- c(1)
tempResult13 <- multiObjMatch(lalonde, treatVal1 , responseVal1 , pairDistVal1 , exactVal1, myBalVal1, rho1=r1s, rho2=r2s, propensityCols = psCols, pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25, toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
compare_matching(tempResult13, covList=c("age", "educ", "race", "married", "nodegree"))
generate_tv_graph(tempResult13)
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main")
library(MultiObjMatch)
library(MultiObjMatch)
library(dplyr)
library(optmatch)
library(rcbalance)
library(matchMulti)
library(RCurl)
library(MultiObjMatch)
library(cobalt)
data("lalonde", package="cobalt")
lalonde
psCols <- c("age", "educ", "married", "nodegree")
## Specify the name of treatment variable
treatVal1 <- "treat"
## Specify the name of response variable
responseVal1 <- "re78"
## Specify the list of variable names used for calculating the pairwise distance
pairDistVal1 <- c("age","married","educ", "nodegree")
## Specify the column for exact matching
exactVal1 <- c("educ")
## Specify the column for measuring balance in algorithm
myBalVal1 <- c("race")
head(lalonde)
## Specify the values to try for rho1
r1s <- c(0.01, 0.02, 0.03, 0.04, 0.1, 0.3, 0.5, 0.7, 0.9)
## Specify the values to try for rho2
r2s <- c(1)
tempResult13 <- multiObjMatch(lalonde, treatVal1 , responseVal1 , pairDistVal1 , exactVal1, myBalVal1, rho1=r1s, rho2=r2s, propensityCols = psCols, pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25, toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
compare_matching(tempResult13, covList=c("age", "educ", "race", "married", "nodegree"))
generate_tv_graph(tempResult13)
-log(0.5)
exp(0.125*0.7)
exp((-3)*0.7)
log(exp)
log
asd
askmd;fl'o'
rw;"q"
log(e)
exp(1)
log(0.125)
log(0.125)/(-2)
exp(-3*1.039721)
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main")
library(MultiObjMatch)
library(dplyr)
library(optmatch)
library(rcbalance)
library(matchMulti)
library(RCurl)
library(MultiObjMatch)
library(cobalt)
data("lalonde", package="cobalt")
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=0, rho.max.f = 10)
compare_matching(matchResult, covList=c("age", "educ", "race", "married", "nodegree"))
psCols <- c("age", "educ", "married", "nodegree")
## Specify the name of treatment variable
treatVal1 <- "treat"
## Specify the name of response variable
responseVal1 <- "re78"
## Specify the list of variable names used for calculating the pairwise distance
pairDistVal1 <- c("age","married","educ", "nodegree")
## Specify the column for exact matching
exactVal1 <- c("educ")
## Specify the column for measuring balance in algorithm
myBalVal1 <- c("race")
head(lalonde)
## Specify the values to try for rho1
r1s <- c(0.01, 0.02, 0.03, 0.04, 0.1, 0.3, 0.5, 0.7, 0.9)
## Specify the values to try for rho2
r2s <- c(1)
tempResult13 <- multiObjMatch(lalonde, treatVal1 , responseVal1 , pairDistVal1 , exactVal1, myBalVal1, rho1=r1s, rho2=r2s, propensityCols = psCols, pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25, toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
compare_matching(tempResult13, covList=c("age", "educ", "race", "married", "nodegree"))
generate_tv_graph(tempResult13)
exp(-log(2))
exp(-2log(2))
exp(-2*log(2))
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main")
library(MultiObjMatch)
library(cobalt)
data("lalonde", package="cobalt")
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main")
library(MultiObjMatch)
library(cobalt)
data("lalonde", package="cobalt")
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
?row
?rows
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main")
library(MultiObjMatch)
library(cobalt)
data("lalonde", package="cobalt")
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main")
library(MultiObjMatch)
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main", force=TRUE)
library(MultiObjMatch)
library(cobalt)
data("lalonde", package="cobalt")
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main", force=TRUE)
library(MultiObjMatch)
library(cobalt)
data("lalonde", package="cobalt")
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main", force=TRUE)
library(MultiObjMatch)
library(cobalt)
data("lalonde", package="cobalt")
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main", force=TRUE)
library(MultiObjMatch)
library(cobalt)
data("lalonde", package="cobalt")
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main", force=TRUE)
library(MultiObjMatch)
library(cobalt)
data("lalonde", package="cobalt")
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("ShichaoHan/MultiObjMatch", ref="main", force=TRUE)
library(MultiObjMatch)
library(cobalt)
data("lalonde", package="cobalt")
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
compare_matching(matchResult, covList=c("age", "educ", "race", "married", "nodegree"))
generate_tv_graph(matchResult)
generate_pairdistance_graph(matchResult)
generate_tv_graph(matchResult)
generate_pairdistance_graph(matchResult)
compare_matching(matchResult , covList=c("age", "educ","race", "married", "nodegree")
compare_matching(matchResult , covList=c("age", "educ","race", "married", "nodegree")
?compare_matching
compare_matching(matchResult , covList=c("age", "educ","race", "married", "nodegree"))
library(cobalt)
data("lalonde", package="cobalt")
psCols <- c("age", "educ", "married", "nodegree")
treatVal <- "treat"
responseVal <- "re78"
pairDistVal <- c("age","married","educ", "nodegree")
exactVal <- c("educ")
myBalVal <- c("race")
r1s <- c(0.01,0.02,0.03,0.1,0.5,1,1.5,2,2.5,4,5,6,7,8,9,10)
r2s <- c(1)
matchResult <- multiObjMatch(lalonde, treatVal, responseVal, pairDistVal,
exactVal, myBalVal, rho1=r1s, rho2=r2s, propensityCols = psCols,
pScores = NULL, idCol = NULL, maxUnMatched = 0.1, caliperOption=0.25,
toleranceOption=1e-1, maxIter=3, rho.max.f = 10)
generate_tv_graph(matchResult)
generate_pairdistance_graph(matchResult)
compare_matching(matchResult , covList=c("age", "educ","race", "married", "nodegree"))
